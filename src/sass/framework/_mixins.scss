@mixin font--hero {
  font-size: $font-size-hero--mob;
  line-height: $line-height-hero--mob;

  @include breakpoint(xs-up) {
    font-size: $font-size-hero;
    line-height: $line-height-hero;
  }
}

@mixin font--large {
  font-size: $font-size-large--mob;
  line-height: $line-height-large--mob;

  @include breakpoint(xs-up) {
    font-size: $font-size-large;
    line-height: $line-height-large;
  }
}

@mixin font--medium {
  font-size: $font-size-medium--mob;
  line-height: $line-height-medium--mob;

  @include breakpoint(xs-up) {
    font-size: $font-size-medium;
    line-height: $line-height-medium;
  }
}

@mixin font--lead {
  font-size: $font-size-lead--mob;
  line-height: $line-height-lead--mob;

  @include breakpoint(xs-up) {
    font-size: $font-size-lead;
    line-height: $line-height-lead;
  }
}

@mixin font--normal {
  font-size: $font-size-normal;
  line-height: $line-height-normal;
}

@mixin font--small {
  font-size: $font-size-small;
  line-height: $line-height-small;
}

@mixin font--micro {
  font-size: $font-size-micro;
  line-height: $line-height-micro;
}

@mixin font--nano {
  font-size: $font-size-nano;
  line-height: $line-height-nano;
}

@mixin link {
  border-bottom: 2px solid $color-eire;
  box-shadow: 0 0 0 transparent;
  color: $text-color;
  padding-bottom: 1px;
  text-decoration: none;
  transition: box-shadow $animation-speed ease;

  &:hover {
    box-shadow: 0 1px 0 $color-eire;
    color: $black;
  }
}

@mixin shadow {
  box-shadow: 0 1px 4px 0 rgba($color-sailor, 0.15);
}

@mixin button {
  @include font--normal;

  appearance: none;
  background: transparent;
  border-color: transparent;
  border-radius: 6px;
  border-style: solid;
  border-width: 2px;
  color: $text-color;
  cursor: pointer;
  display: inline-block;
  font-family: $font-family-sans-serif;

  // font smoothing to alias text
  // Assists with consistent aliasing where there is
  // strange rendering of button within fixed header
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  font-weight: 500;
  line-height: 24px;
  margin: 0;
  outline: none;
  padding: $pad-v--xxs $pad-h--md;
  text-decoration: none;
  text-rendering: optimizeLegibility;
  transition: background-color $animation-speed--fast ease-in,
    border $animation-speed--fast ease-in, color $animation-speed--fast ease-in;

  &[disabled] {
    cursor: not-allowed;
  }
}

@mixin button--primary {
  background-color: $color-eire;
  color: $white;

  &:hover {
    background-color: $color-eire-darker;
  }

  &[disabled],
  &[disabled]:hover {
    background: $grey-mid-light;
    border-color: transparent;
    color: $white;
  }
}

@mixin button--secondary {
  background-color: transparent;
  border-color: $color-eire;
  color: $text-color;

  &:hover {
    background-color: $color-eire;
    color: $white;
  }

  &[disabled],
  &[disabled]:hover {
    background: transparent;
    border-color: $grey-mid-light;
    color: $grey-mid-light;
  }
}

@mixin button--active {
  background-color: $color-sailor;
  border-color: $color-sailor;
  color: $white;

  &:hover {
    background-color: $color-sailor-hover;
    color: $white;
  }

  &[disabled],
  &[disabled]:hover {
    background: transparent;
    border-color: $grey-mid-light;
    color: $grey-mid-light;
  }
}

@mixin button--dropdown {
  padding-right: 50px;
  position: relative;

  &::after {
    // Base style based on btn--primary, using white icon
    background-image: url("../assets/svg/icon-white-chevron-down.svg");
    background-position: right center;
    background-repeat: no-repeat;
    background-size: contain;
    content: "";
    height: 16px;
    position: absolute;
    right: 20px;
    top: 11px;
    width: 14px;
  }

  &--selected {
    &::after {
      background-image: url("../assets/svg/icon-white-chevron-up.svg");
      background-position: right center;
      background-repeat: no-repeat;
      background-size: contain;
    }
  }
}

@mixin button--checked {
  padding-right: 36px;
  position: relative;

  &::after {
    // Base style based on btn--primary, using white icon
    background-image: url("../assets/svg/icon-white-tick.svg");
    background-position: right center;
    background-repeat: no-repeat;
    background-size: contain;
    content: "";
    height: 16px;
    position: absolute;
    right: 12px;
    top: 11px;
    width: 14px;
  }
}

// Chevron buttons
// Set base styling and positioning using `button--chevron` based on default of
// chevron coming after the text. Then use the additional placement mixins eg
// `button--chevron-right` to add the background icon and additional styling.

@mixin button--chevron {
  font-weight: 500;
  position: relative;

  &::after {
    background-position: right center; // defaults to right, override to position left
    background-repeat: no-repeat;
    background-size: contain;
    content: "";
    height: 7px;
    padding-top: 10px;
    position: absolute;
    right: 10px; // defaults to right, override to position left
    top: 7px;
    transition: color $animation-speed ease-out;
    width: 7px;
  }

  &:hover {
    color: $color-eire-darker;
  }
}

@mixin button--chevron-right {
  padding: 0 25px 0 0;

  &::after {
    background-image: url("../assets/svg/icon-chevron-right.svg");
  }

  &:hover {
    &::after {
      right: $pad-h--xs;
      transition: right $animation-speed ease-out;
    }
  }

  &.button--micro {
    &::after {
      top: 5px;
      width: 5px;
    }
  }
}

@mixin button--chevron-left {
  border-left: 0;
  padding: 0 0 0 13px;

  &::after {
    background-image: url("../assets/svg/icon-chevron-right.svg");
    background-position: left center;
    left: 0;
    right: auto;
    transform: rotate(180deg);
  }

  &:hover {
    &::after {
      left: -$pad-h--xs;
      transition: left $animation-speed ease-out;
    }
  }

  &.button--micro {
    &::after {
      top: 5px;
      width: 5px;
    }
  }
}

@mixin button--chevron-down {
  padding: 0 30px 0 0;

  &::after {
    background-image: url("../assets/svg/icon-eire-chevron-down.svg");
    top: 8px;
    width: 10px;
  }

  &.button--micro {
    &::after {
      top: 5px;
      width: 8px;
    }
  }
}

@mixin button--progress {
  padding-right: 36px;
  position: relative;

  $spinner-size: 20px;

  &::after {
    animation-duration: $animation-speed--slower;
    animation-iteration-count: infinite;
    animation-name: spin;
    animation-timing-function: linear;
    background-image: url("../assets/svg/progress-ring-outer.svg");
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    content: "";
    height: $spinner-size;
    position: absolute;
    right: $spinner-size / 2;
    top: $spinner-size / 2;
    width: $spinner-size;
  }

  &::before {
    animation-direction: reverse;
    animation-duration: $animation-speed--slower;
    animation-iteration-count: infinite;
    animation-name: spin;
    animation-timing-function: linear;
    background-image: url("../assets/svg/progress-ring-inner.svg");
    background-position: center;
    background-repeat: no-repeat;
    background-size: $spinner-size/1.5;
    content: "";
    height: $spinner-size;
    position: absolute;
    right: $spinner-size / 2;
    top: $spinner-size / 2;
    width: $spinner-size;
  }

  @keyframes spin {
    0% {
      transform: rotateZ(0deg);
    }
    100% {
      transform: rotateZ(360deg);
    }
  }
}

@mixin button--progress-white {
  &::before {
    background-image: url("../assets/svg/progress-ring-inner-white.svg");
  }

  &::after {
    background-image: url("../assets/svg/progress-ring-inner-white.svg");
  }
}

@mixin button--chevron-up {
  padding: 0 30px 0 0;

  &::after {
    background-image: url("../assets/svg/icon-eire-chevron-down.svg");
    top: 8px;
    transform: rotate(180deg);
    width: 10px;
  }

  &.button--micro {
    &::after {
      top: 5px;
      width: 8px;
    }
  }
}

// Add pink dot after Title
@mixin title-dot {
  &::after {
    color: $color-bounce;
    content: ".";
    display: inline;
  }
}

@mixin sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

// dashed-border
@mixin dashed-border($direction) {
  $border-direction: if($direction == h, right, top);
  $border-position: if($direction == h, bottom center, right center);
  $repeat-direction: if($direction == h, repeat-x, repeat-y);

  background-image: linear-gradient(
    to $border-direction,
    $grey-mid 50%,
    rgba(255, 255, 255, 0) 0%
  );
  background-position: $border-position;
  background-repeat: $repeat-direction;
  background-size: if($direction == h, 10px 1px, 1px 10px);
}

// Add horizontal dashed line
@mixin dashed-border-h {
  @include dashed-border(h);
}

// Add vertical dashed line
@mixin dashed-border-v {
  @include dashed-border(v);
}

@mixin aspect-ratio($width, $height) {
  padding-top: ($height / $width) * 100%;
}
